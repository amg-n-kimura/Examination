
JAVAのおさらい

JAVAとはオブジェクト指向言語
	C++、C#、Objective C

パッケージ(package)
	クラス名を唯一の名称として担保することができる
		jp.co.amgakuin.pg......

クラスの定義書式

アクセス修飾子 class クラス名

public class ClassA
{
	private int x;
	protected String s;
	public int z;

	public ClassA() {
	}
}

アクセス修飾子＝アクセス権限の設定
	public		どこからでアクセス可能
	protected	自クラス、または継承されたクラス＝派生クラス
	デフォルト（無指定）	protected + 同一パッケージのクラス
	private		自クラスのみ

継承
	指定したクラスの特性（性質）をすべて受け継ぐことができる

	元となるクラス（基底クラス、親クラス）
	継承したクラス（派生クラス、子クラス）

Javaにおいて継承する際にはextendsという予約語を使う

public class ThreadInstance extends Thread

public class ClassB extends ClassA
{
	public int y;
	public void testMethod() {
		....
	}
}

クラスを利用するにはインスタンスを生成する必要がある。

ClassA classA = new Class();

newによってクラスのインスタンスを生成することができる。

classA.x = 10;
classA.s = "文字列";

というように利用できる。


ポリモーフィングについて

ClassA classA = new ClassA();
ClassB classB = new ClassB();

ClassA classA2 = classB; // OK
ClassB classB2 = classA; // エラー

「多様性」
「多態性」

Javaには継承の１つとして、interfaceというものがある。
implementsという予約語で実装できる。

継承はJAVAでは1つしかできない（多重継承はできない）　C++はできる
interfaceを使って複数の機能を実装できる。



Gitのお話

	ギット

GitLab	授業
GitHub	企業がよく使ってます

Ｇｉｔというのは、リソース類（ソースファイル、テキストファイル）を
チームやプロジェクトで共有しながら開発を進めるためのツール

リポジトリ＝管理単位
	共有されるべきリソースの集合

ブランチ＝名称付＝ローカルとサーバーでそれぞれ独立して管理できる
	とある時点の状態を保持するもの
	複数作成できる＝同一リポジトリ上で異なる状態を別々に管理できる
	コピー（チェックアウト）できる
	マージできる

マージ＝同期更新（混ぜる）
	他のブランチの内容を現在のブランチの内容に反映する処理
	（テキストファイルは主に行単位で比較される）
	（バイナリファイルはファイル単位で比較される）
		他のブランチ＝他人の更新内容ー＞取り入れることができる
	発生する可能性のある現象
		コンフリクト（衝突）＝＝＞テキストファイルのみ
			同一行と思われる場所が２つのブランチで更新されている場合
			どちらを優先するか決めてマージを完了させる必要がある

	自分のブランチを他人にマージしてもらうよう要求できる
		マージリクエスト＝マジリク	GitLab
		プルリクエスト＝プルリク	GitHub

チェックアウト
	ブランチを初めてダウンロードすること
プル
	ブランチを更新（サーバーと同期）すること
プッシュ
	ブランチを更新（サーバーへ同期）すること
コミット
	ブランチを更新（ローカルへ同期）すること











